name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  deploy:
    if: always()
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
    - uses: actions/download-artifact@master
      with:
        name: playwright-report
        path: playwright-report/
    - uses: actions/configure-pages@main
    - uses: actions/upload-pages-artifact@main
      with:
        path: './playwright-report/'
    - id: deployment
      uses: actions/deploy-pages@main

    # - uses: actions/checkout@v4
    # - uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: results.json
    #     path: ./results.json
    #     retention-days: 1

    # - name: get properties
    #   id: json_properties
    #   uses: ActionsTools/read-json-action@main
    #   with:
    #     file_path: "results.json"
    
    # - run: |
    #     echo ${{steps.json_properties.outputs.name}}
    #     echo ${{steps.json_properties.outputs.version}}


    # - name: Slack Notification
    #   if: always()
    #   uses: rtCamp/action-slack-notify@v2
    #   env:
    #     SLACK_CHANNEL: automation_for_testing_only
    #     SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
    #     SLACK_ICON: https://github.com/rtCamp.png?size=48
    #     SLACK_MESSAGE: ':goat: Playwright for :desktop_computer:${{ github.event.inputs.environment}} :goat: https://github.com/fdcelward/PlaywrightTest/${{ github.run_number }}/'
    #     SLACK_TITLE: Report [run on ${{ github.event.inputs.environment}}] using ${{ github.event.inputs.maestro_web_branch }}]
    #     SLACK_USERNAME: rtCamp
    #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      #Test Send Slack
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: 'C03FN0AFT8V'
        # For posting a rich message using Block Kit
        payload: |
          {
            "text": "*GitHub Action Build Result: ${{ job.status }}*\n>:github: Github Action: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\n:bar_chart: Html Result: ${{steps.deployment.outputs.page_url}}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*GitHub Action Build Result: ${{ job.status }}*\n>:github: Github Action: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\n:bar_chart: Html Result: ${{steps.deployment.outputs.page_url}}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_OAUTH_TOKEN }}

      